
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.security.auth.callback.ConfirmationCallback;
import javax.swing.JOptionPane;

/**
 *********************BLOC DE NOTAS - CETYS
 *
 *************************************
 ** @author trm = Tomás Rodríguez-Mata Suárez
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    // Variable global que almacena la ruta del archivo abierto
    String openedFilePath = "";

    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jOptionPane1 = new javax.swing.JOptionPane();
        TextArea = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        MenuPrincipal = new javax.swing.JMenuBar();
        ArchivoMenu = new javax.swing.JMenu();
        NuevoItem = new javax.swing.JMenuItem();
        AbrirItem = new javax.swing.JMenuItem();
        GuardarItem = new javax.swing.JMenuItem();
        GuardarComoItem = new javax.swing.JMenuItem();
        AyudaMenu = new javax.swing.JMenu();
        DesarrolladorMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bloc de notas");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        TextArea.setViewportView(jTextArea1);

        ArchivoMenu.setText("Archivo");

        NuevoItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        NuevoItem.setText("Nuevo");
        NuevoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoItemActionPerformed(evt);
            }
        });
        ArchivoMenu.add(NuevoItem);

        AbrirItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        AbrirItem.setText("Abrir");
        AbrirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirItemActionPerformed(evt);
            }
        });
        ArchivoMenu.add(AbrirItem);

        GuardarItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        GuardarItem.setText("Guardar");
        GuardarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarItemActionPerformed(evt);
            }
        });
        ArchivoMenu.add(GuardarItem);

        GuardarComoItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        GuardarComoItem.setText("Guardar como");
        GuardarComoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarComoItemActionPerformed(evt);
            }
        });
        ArchivoMenu.add(GuardarComoItem);

        MenuPrincipal.add(ArchivoMenu);

        AyudaMenu.setText("A cerca de...");

        DesarrolladorMenu.setText("Dasarrollado");
        DesarrolladorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DesarrolladorMenuActionPerformed(evt);
            }
        });
        AyudaMenu.add(DesarrolladorMenu);

        MenuPrincipal.add(AyudaMenu);

        setJMenuBar(MenuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DesarrolladorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DesarrolladorMenuActionPerformed
        JOptionPane.showMessageDialog(null, "Bloc de notas desarrollado en Cetys por:\n Tomás Rodríguez-Mata");
    }//GEN-LAST:event_DesarrolladorMenuActionPerformed

    private void AbrirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirItemActionPerformed
        abrirFile();
    }//GEN-LAST:event_AbrirItemActionPerformed

    private void GuardarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarItemActionPerformed
        guardar();
    }//GEN-LAST:event_GuardarItemActionPerformed

    private void GuardarComoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarComoItemActionPerformed
        guardarComo();;
    }//GEN-LAST:event_GuardarComoItemActionPerformed

    private void NuevoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoItemActionPerformed
        archivoNuevo();
    }//GEN-LAST:event_NuevoItemActionPerformed

    public void archivoNuevo() {
        if (jTextArea1.getText().isEmpty()) {
            jTextArea1.setText("");
        } else {
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Quieres guardar los cambios?");
            if (respuesta == 0) {
                guardarComo();
            } else if (respuesta == 1) {
                jTextArea1.setText("");
            }
        }
    }

    /**
     *
     */
    public void guardar() {
        try {
            PrintWriter writer = new PrintWriter(openedFilePath);
            writer.write(jTextArea1.getText());
            writer.close();
            JOptionPane.showMessageDialog(null, "Se ha actualizado el archivo");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Hubo algun problema en guardar el archivo" + ex.toString());
        }
    }

    /**
     *
     */
    public void guardarComo() {
        int seleccion = jFileChooser1.showSaveDialog(jTextArea1);
        if (seleccion == 0) {
            try {
                PrintWriter writer = null;
                File archivo = jFileChooser1.getSelectedFile();
                writer = new PrintWriter(archivo);
                //Antes de escribir, comprobar si el fichero existe
                if (archivo.exists()) {
                    // Si el archivo es el mismo que se abrio, actualiza
                    if (openedFilePath.equals(archivo.getAbsolutePath())) {
                        writer.print(jTextArea1.getText());
                        JOptionPane.showMessageDialog(null, "Se ha actualizado el archivo");
                    } else {     // El archivo ya existe y no es el mismo que se abrio
                        // Preguntamos si desea sobreescribir los datos
                        int respuesta = JOptionPane.showConfirmDialog(null, "¿Quieres sobreescribir el archivo?");
                        if (respuesta == 0) {
                            writer.print(jTextArea1.getText());
                            JOptionPane.showMessageDialog(null, "Se ha sobreescrito el archivo");
                            // Guardamos la nueva ruta seleccionada donde se quiere guardar el archivo
                            openedFilePath = archivo.getAbsolutePath();
                        }
                    }
                } else { // Se desea crear un nuevo archivo
                    writer.print(jTextArea1.getText());
                    JOptionPane.showMessageDialog(null, "Se ha generado el nuevo archivo ");
                    // Guardamos la nueva ruta seleccionada donde se quiere guardar el archivo
                    openedFilePath = archivo.getAbsolutePath();
                }
                // Guarda en la misma ruta que se ha abierto
                setTitle(archivo.getName() + "Bloc de notas");
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Hubo algun problema en guardar el archivo" + ex.toString());
            }
        }
    }

    /**
     * Método para abrir y escribir el archivo seleccionado en el TextArea
     */
    public void abrirFile() {
        archivoNuevo();
        int seleccion = jFileChooser1.showOpenDialog(TextArea);
        // Si se selecciona archivo válido == 0, sino != 0
        if (seleccion == 0) {
            try {
                BufferedReader reader = null;
                File archivo = jFileChooser1.getSelectedFile();
                // Guardamos el archivo seleccionado en un BufferedReader
                reader = new BufferedReader(new FileReader(archivo));
                archivo.setWritable(true);
                // Guardamos el fichero abierto en el atributo
                openedFilePath = archivo.getAbsolutePath();
                // Guarda primera linea del documento
                String linea = reader.readLine();

                // Guarda una por una cada linea del archivo
                while (linea != null) {
                    jTextArea1.append(linea);
                    // Genera un cambio de linea, una vez sacada la linea
                    jTextArea1.append(System.getProperty("line.separator"));
                    linea = reader.readLine();
                }
                setTitle(archivo.getName()+": Bloc de notas");
                // Cerramos el bufferedReader
                reader.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Archivo no encontrado" + ex.toString());
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al acceder al fichero para leerlo" + ex.toString());
            }
        }
    }

    /**
     * @param args
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VentanaPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AbrirItem;
    private javax.swing.JMenu ArchivoMenu;
    private javax.swing.JMenu AyudaMenu;
    private javax.swing.JMenuItem DesarrolladorMenu;
    private javax.swing.JMenuItem GuardarComoItem;
    private javax.swing.JMenuItem GuardarItem;
    private javax.swing.JMenuBar MenuPrincipal;
    private javax.swing.JMenuItem NuevoItem;
    private javax.swing.JScrollPane TextArea;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
